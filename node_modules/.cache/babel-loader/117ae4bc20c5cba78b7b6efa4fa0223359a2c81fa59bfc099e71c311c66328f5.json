{"ast":null,"code":"var _jsxFileName = \"/home/natalie/Dokumente/Projects/eco-garden/src/components/MQTTSimulator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Play, Pause, RotateCcw, Activity, Wifi } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MQTTSimulator = ({\n  sensors,\n  onDataUpdate\n}) => {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const generateSensorData = sensor => {\n    const now = new Date().toISOString();\n    const data = {\n      timestamp: now\n    };\n    switch (sensor.type) {\n      case 'WATERING_UNIT':\n        // Simulate moisture slowly decreasing over time\n        const currentMoisture = Math.max(10, Math.min(95, 45 + (Math.random() - 0.5) * 20 + Math.sin(Date.now() / 100000) * 15));\n        data.moisture = Math.round(currentMoisture * 10) / 10;\n        data.pumpStatus = currentMoisture < 30 ? Math.random() > 0.7 : false;\n        data.soilTemperature = Math.round((20 + Math.random() * 8) * 10) / 10;\n        break;\n      case 'ENV_II':\n        // Simulate environmental conditions with daily cycles\n        const hourOfDay = new Date().getHours();\n        const tempBase = 18 + Math.sin((hourOfDay - 6) * Math.PI / 12) * 6;\n        data.temperature = Math.round((tempBase + (Math.random() - 0.5) * 4) * 10) / 10;\n        data.humidity = Math.round((55 + Math.sin(hourOfDay * Math.PI / 12) * 15 + (Math.random() - 0.5) * 10) * 10) / 10;\n        data.pressure = Math.round((1013 + (Math.random() - 0.5) * 20) * 10) / 10;\n        break;\n      case 'LIGHT_SENSOR':\n        // Simulate light levels based on time of day\n        const hour = new Date().getHours();\n        let lightLevel = 0;\n        if (hour >= 6 && hour <= 18) {\n          lightLevel = Math.max(0, Math.sin((hour - 6) * Math.PI / 12) * 100);\n        }\n        data.lightLevel = Math.round((lightLevel + (Math.random() - 0.5) * 20) * 10) / 10;\n        data.uvIndex = Math.round((lightLevel / 100 * 8 + (Math.random() - 0.5) * 2) * 10) / 10;\n        break;\n      default:\n        data.value = Math.round(Math.random() * 100 * 10) / 10;\n    }\n    return data;\n  };\n  const simulateDataUpdate = () => {\n    const activeSensors = sensors.filter(s => s.status === 'active');\n    const updates = {};\n    activeSensors.forEach(sensor => {\n      const mqttData = generateSensorData(sensor);\n      updates[sensor.id] = {\n        sensorId: sensor.id,\n        topic: sensor.mqttTopic,\n        data: mqttData,\n        timestamp: new Date().toISOString()\n      };\n    });\n    if (Object.keys(updates).length > 0) {\n      onDataUpdate(updates);\n      setLastUpdate(new Date().toISOString());\n    }\n  };\n  const startSimulation = () => {\n    if (!isRunning) {\n      const id = setInterval(simulateDataUpdate, 5000); // Update every 5 seconds\n      setIntervalId(id);\n      setIsRunning(true);\n      simulateDataUpdate(); // Send initial data\n    }\n  };\n  const stopSimulation = () => {\n    if (intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n    setIsRunning(false);\n  };\n  const resetSimulation = () => {\n    stopSimulation();\n    setLastUpdate(null);\n  };\n  useEffect(() => {\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [intervalId]);\n  const formatTime = timestamp => {\n    if (!timestamp) return 'Never';\n    return new Date(timestamp).toLocaleTimeString();\n  };\n  const activeSensorCount = sensors.filter(s => s.status === 'active').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(Activity, {\n          className: \"h-5 w-5 text-purple-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 dark:text-white\",\n          children: \"MQTT Data Simulator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-green-500 rounded-full animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-green-600 dark:text-green-400\",\n            children: \"Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isRunning ? stopSimulation : startSimulation,\n          className: `flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium ${isRunning ? 'bg-red-100 text-red-700 hover:bg-red-200 dark:bg-red-900 dark:text-red-300' : 'bg-green-100 text-green-700 hover:bg-green-200 dark:bg-green-900 dark:text-green-300'}`,\n          children: [isRunning ? /*#__PURE__*/_jsxDEV(Pause, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(Play, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isRunning ? 'Stop' : 'Start'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetSimulation,\n          className: \"flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(Wifi, {\n          className: \"h-4 w-4 text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600 dark:text-gray-400\",\n          children: \"Active Sensors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium text-gray-900 dark:text-white\",\n          children: activeSensorCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600 dark:text-gray-400\",\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `font-medium ${isRunning ? 'text-green-600 dark:text-green-400' : 'text-gray-500 dark:text-gray-500'}`,\n          children: isRunning ? 'Publishing Data' : 'Stopped'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600 dark:text-gray-400\",\n          children: \"Last Update:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium text-gray-900 dark:text-white\",\n          children: formatTime(lastUpdate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), activeSensorCount === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-yellow-800 dark:text-yellow-200\",\n        children: \"No active sensors available for simulation. Add some sensors first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-xs text-gray-500 dark:text-gray-400\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This simulator generates realistic sensor data every 5 seconds for all active sensors. Data includes moisture levels, temperature, humidity, and pump status based on sensor type.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(MQTTSimulator, \"ht05UetIXtnDd0lkJeixDHAZRu4=\");\n_c = MQTTSimulator;\nexport default MQTTSimulator;\nvar _c;\n$RefreshReg$(_c, \"MQTTSimulator\");","map":{"version":3,"names":["React","useState","useEffect","Play","Pause","RotateCcw","Activity","Wifi","jsxDEV","_jsxDEV","MQTTSimulator","sensors","onDataUpdate","_s","isRunning","setIsRunning","intervalId","setIntervalId","lastUpdate","setLastUpdate","generateSensorData","sensor","now","Date","toISOString","data","timestamp","type","currentMoisture","Math","max","min","random","sin","moisture","round","pumpStatus","soilTemperature","hourOfDay","getHours","tempBase","PI","temperature","humidity","pressure","hour","lightLevel","uvIndex","value","simulateDataUpdate","activeSensors","filter","s","status","updates","forEach","mqttData","id","sensorId","topic","mqttTopic","Object","keys","length","startSimulation","setInterval","stopSimulation","clearInterval","resetSimulation","formatTime","toLocaleTimeString","activeSensorCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_c","$RefreshReg$"],"sources":["/home/natalie/Dokumente/Projects/eco-garden/src/components/MQTTSimulator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Play, Pause, RotateCcw, Activity, Wifi } from 'lucide-react';\n\nconst MQTTSimulator = ({ sensors, onDataUpdate }) => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  const generateSensorData = (sensor) => {\n    const now = new Date().toISOString();\n    const data = { timestamp: now };\n\n    switch (sensor.type) {\n      case 'WATERING_UNIT':\n        // Simulate moisture slowly decreasing over time\n        const currentMoisture = Math.max(10, Math.min(95, \n          45 + (Math.random() - 0.5) * 20 + Math.sin(Date.now() / 100000) * 15\n        ));\n        \n        data.moisture = Math.round(currentMoisture * 10) / 10;\n        data.pumpStatus = currentMoisture < 30 ? Math.random() > 0.7 : false;\n        data.soilTemperature = Math.round((20 + Math.random() * 8) * 10) / 10;\n        break;\n\n      case 'ENV_II':\n        // Simulate environmental conditions with daily cycles\n        const hourOfDay = new Date().getHours();\n        const tempBase = 18 + Math.sin((hourOfDay - 6) * Math.PI / 12) * 6;\n        \n        data.temperature = Math.round((tempBase + (Math.random() - 0.5) * 4) * 10) / 10;\n        data.humidity = Math.round((55 + Math.sin(hourOfDay * Math.PI / 12) * 15 + (Math.random() - 0.5) * 10) * 10) / 10;\n        data.pressure = Math.round((1013 + (Math.random() - 0.5) * 20) * 10) / 10;\n        break;\n\n      case 'LIGHT_SENSOR':\n        // Simulate light levels based on time of day\n        const hour = new Date().getHours();\n        let lightLevel = 0;\n        if (hour >= 6 && hour <= 18) {\n          lightLevel = Math.max(0, Math.sin((hour - 6) * Math.PI / 12) * 100);\n        }\n        \n        data.lightLevel = Math.round((lightLevel + (Math.random() - 0.5) * 20) * 10) / 10;\n        data.uvIndex = Math.round((lightLevel / 100 * 8 + (Math.random() - 0.5) * 2) * 10) / 10;\n        break;\n\n      default:\n        data.value = Math.round(Math.random() * 100 * 10) / 10;\n    }\n\n    return data;\n  };\n\n  const simulateDataUpdate = () => {\n    const activeSensors = sensors.filter(s => s.status === 'active');\n    const updates = {};\n\n    activeSensors.forEach(sensor => {\n      const mqttData = generateSensorData(sensor);\n      updates[sensor.id] = {\n        sensorId: sensor.id,\n        topic: sensor.mqttTopic,\n        data: mqttData,\n        timestamp: new Date().toISOString()\n      };\n    });\n\n    if (Object.keys(updates).length > 0) {\n      onDataUpdate(updates);\n      setLastUpdate(new Date().toISOString());\n    }\n  };\n\n  const startSimulation = () => {\n    if (!isRunning) {\n      const id = setInterval(simulateDataUpdate, 5000); // Update every 5 seconds\n      setIntervalId(id);\n      setIsRunning(true);\n      simulateDataUpdate(); // Send initial data\n    }\n  };\n\n  const stopSimulation = () => {\n    if (intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n    setIsRunning(false);\n  };\n\n  const resetSimulation = () => {\n    stopSimulation();\n    setLastUpdate(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [intervalId]);\n\n  const formatTime = (timestamp) => {\n    if (!timestamp) return 'Never';\n    return new Date(timestamp).toLocaleTimeString();\n  };\n\n  const activeSensorCount = sensors.filter(s => s.status === 'active').length;\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-2\">\n          <Activity className=\"h-5 w-5 text-purple-500\" />\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n            MQTT Data Simulator\n          </h3>\n          {isRunning && (\n            <div className=\"flex items-center space-x-1\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n              <span className=\"text-sm text-green-600 dark:text-green-400\">Live</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={isRunning ? stopSimulation : startSimulation}\n            className={`flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium ${\n              isRunning\n                ? 'bg-red-100 text-red-700 hover:bg-red-200 dark:bg-red-900 dark:text-red-300'\n                : 'bg-green-100 text-green-700 hover:bg-green-200 dark:bg-green-900 dark:text-green-300'\n            }`}\n          >\n            {isRunning ? <Pause size={16} /> : <Play size={16} />}\n            <span>{isRunning ? 'Stop' : 'Start'}</span>\n          </button>\n\n          <button\n            onClick={resetSimulation}\n            className=\"flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300\"\n          >\n            <RotateCcw size={16} />\n            <span>Reset</span>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n        <div className=\"flex items-center space-x-2\">\n          <Wifi className=\"h-4 w-4 text-blue-500\" />\n          <span className=\"text-gray-600 dark:text-gray-400\">Active Sensors:</span>\n          <span className=\"font-medium text-gray-900 dark:text-white\">{activeSensorCount}</span>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-gray-600 dark:text-gray-400\">Status:</span>\n          <span className={`font-medium ${\n            isRunning \n              ? 'text-green-600 dark:text-green-400' \n              : 'text-gray-500 dark:text-gray-500'\n          }`}>\n            {isRunning ? 'Publishing Data' : 'Stopped'}\n          </span>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-gray-600 dark:text-gray-400\">Last Update:</span>\n          <span className=\"font-medium text-gray-900 dark:text-white\">\n            {formatTime(lastUpdate)}\n          </span>\n        </div>\n      </div>\n\n      {activeSensorCount === 0 && (\n        <div className=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md\">\n          <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n            No active sensors available for simulation. Add some sensors first.\n          </p>\n        </div>\n      )}\n\n      <div className=\"mt-4 text-xs text-gray-500 dark:text-gray-400\">\n        <p>\n          This simulator generates realistic sensor data every 5 seconds for all active sensors.\n          Data includes moisture levels, temperature, humidity, and pump status based on sensor type.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default MQTTSimulator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}