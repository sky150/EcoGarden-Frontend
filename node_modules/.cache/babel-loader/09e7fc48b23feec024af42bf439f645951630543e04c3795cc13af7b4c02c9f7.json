{"ast":null,"code":"var _jsxFileName = \"/home/natalie/Dokumente/Projects/eco-garden/src/components/PlantSensorAssignment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Plus, X, Droplets, Thermometer, Sun, Activity, AlertCircle } from 'lucide-react';\nimport { sensorTypes } from '../data/deviceData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlantSensorAssignment = ({\n  plant,\n  sensors,\n  currentAssignments,\n  onAssignSensor,\n  onUnassignSensor,\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [selectedSensorId, setSelectedSensorId] = useState('');\n  const [selectedRole, setSelectedRole] = useState('primary_moisture');\n  const getSensorIcon = type => {\n    switch (type) {\n      case 'WATERING_UNIT':\n        return /*#__PURE__*/_jsxDEV(Droplets, {\n          className: \"text-blue-500\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this);\n      case 'ENV_II':\n        return /*#__PURE__*/_jsxDEV(Thermometer, {\n          className: \"text-orange-500\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this);\n      case 'LIGHT_SENSOR':\n        return /*#__PURE__*/_jsxDEV(Sun, {\n          className: \"text-yellow-500\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Activity, {\n          className: \"text-gray-500\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getAssignedSensors = () => {\n    return currentAssignments.filter(a => a.plantId === plant.id).map(assignment => ({\n      ...sensors.find(s => s.id === assignment.sensorId),\n      role: assignment.role\n    })).filter(Boolean);\n  };\n  const getAvailableSensors = () => {\n    const assignedSensorIds = new Set(currentAssignments.filter(a => a.plantId === plant.id).map(a => a.sensorId));\n    return sensors.filter(sensor => sensor.status === 'active' && (!assignedSensorIds.has(sensor.id) || sensor.shared));\n  };\n  const handleAssignSensor = () => {\n    if (selectedSensorId && selectedRole) {\n      onAssignSensor(plant.id, parseInt(selectedSensorId), selectedRole);\n      setSelectedSensorId('');\n      setSelectedRole('primary_moisture');\n    }\n  };\n  const getRoleDisplayName = role => {\n    const roleNames = {\n      'primary_moisture': 'Primary Moisture',\n      'environmental': 'Environmental',\n      'backup_moisture': 'Backup Moisture',\n      'light_monitoring': 'Light Monitoring'\n    };\n    return roleNames[role] || role;\n  };\n  const getRoleColor = role => {\n    const roleColors = {\n      'primary_moisture': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',\n      'environmental': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',\n      'backup_moisture': 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200',\n      'light_monitoring': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\n    };\n    return roleColors[role] || 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n  };\n  const assignedSensors = getAssignedSensors();\n  const availableSensors = getAvailableSensors();\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-900 dark:text-white\",\n          children: [\"Manage Sensors for \", plant.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 dark:text-white mb-3\",\n          children: [\"Assigned Sensors (\", assignedSensors.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), assignedSensors.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: assignedSensors.map(sensor => {\n            var _sensorTypes$sensor$t;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [getSensorIcon(sensor.type), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium text-gray-900 dark:text-white\",\n                      children: sensor.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `text-xs px-2 py-1 rounded ${getRoleColor(sensor.role)}`,\n                      children: getRoleDisplayName(sensor.role)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500 dark:text-gray-400\",\n                    children: [(_sensorTypes$sensor$t = sensorTypes[sensor.type]) === null || _sensorTypes$sensor$t === void 0 ? void 0 : _sensorTypes$sensor$t.name, \" \\u2022 \", sensor.location || 'No location', sensor.shared && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-xs bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 px-1 py-0.5 rounded\",\n                      children: \"Shared\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onUnassignSensor(plant.id, sensor.id, sensor.role),\n                className: \"p-2 text-gray-400 hover:text-red-600 dark:hover:text-red-400\",\n                title: \"Remove sensor\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, `${sensor.id}-${sensor.role}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4 text-gray-500 dark:text-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            size: 24,\n            className: \"mx-auto mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No sensors assigned to this plant yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 dark:border-gray-600 pt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900 dark:text-white mb-3\",\n          children: \"Assign New Sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), availableSensors.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n                children: \"Select Sensor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedSensorId,\n                onChange: e => setSelectedSensorId(e.target.value),\n                className: \"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-md dark:bg-gray-700 dark:text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Choose a sensor...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), availableSensors.map(sensor => {\n                  var _sensorTypes$sensor$t2;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sensor.id,\n                    children: [sensor.name, \" (\", (_sensorTypes$sensor$t2 = sensorTypes[sensor.type]) === null || _sensorTypes$sensor$t2 === void 0 ? void 0 : _sensorTypes$sensor$t2.name, \")\", sensor.shared ? ' - Shared' : '']\n                  }, sensor.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n                children: \"Sensor Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedRole,\n                onChange: e => setSelectedRole(e.target.value),\n                className: \"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-md dark:bg-gray-700 dark:text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"primary_moisture\",\n                  children: \"Primary Moisture\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"environmental\",\n                  children: \"Environmental\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"backup_moisture\",\n                  children: \"Backup Moisture\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"light_monitoring\",\n                  children: \"Light Monitoring\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), selectedSensorId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\",\n            children: (() => {\n              const sensor = sensors.find(s => s.id === parseInt(selectedSensorId));\n              const sensorType = sensorTypes[sensor === null || sensor === void 0 ? void 0 : sensor.type];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [getSensorIcon(sensor === null || sensor === void 0 ? void 0 : sensor.type), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-gray-900 dark:text-white\",\n                    children: sensor === null || sensor === void 0 ? void 0 : sensor.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-gray-600 dark:text-gray-400\",\n                    children: [\"Capabilities: \", sensorType === null || sensorType === void 0 ? void 0 : sensorType.capabilities.join(', ')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-gray-600 dark:text-gray-400\",\n                    children: [\"MQTT Topic: \", sensor === null || sensor === void 0 ? void 0 : sensor.mqttTopic]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this);\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAssignSensor,\n            disabled: !selectedSensorId || !selectedRole,\n            className: \"flex items-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Assign Sensor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4 text-gray-500 dark:text-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No available sensors to assign.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm mt-1\",\n            children: \"All active sensors are already assigned (unless they're shared sensors).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-sm font-medium text-gray-900 dark:text-white mb-2\",\n          children: \"Sensor Role Descriptions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600 dark:text-gray-400 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Primary Moisture:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 18\n            }, this), \" Main sensor for monitoring soil moisture and triggering watering.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Environmental:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 18\n            }, this), \" Monitors ambient conditions (temperature, humidity).\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Backup Moisture:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 18\n            }, this), \" Secondary moisture sensor for redundancy.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Light Monitoring:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 18\n            }, this), \" Tracks light levels and UV exposure.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(PlantSensorAssignment, \"LnyBx8yJ3vOUTWeepdJokwcaeEQ=\");\n_c = PlantSensorAssignment;\nexport default PlantSensorAssignment;\nvar _c;\n$RefreshReg$(_c, \"PlantSensorAssignment\");","map":{"version":3,"names":["React","useState","Plus","X","Droplets","Thermometer","Sun","Activity","AlertCircle","sensorTypes","jsxDEV","_jsxDEV","PlantSensorAssignment","plant","sensors","currentAssignments","onAssignSensor","onUnassignSensor","isOpen","onClose","_s","selectedSensorId","setSelectedSensorId","selectedRole","setSelectedRole","getSensorIcon","type","className","size","fileName","_jsxFileName","lineNumber","columnNumber","getAssignedSensors","filter","a","plantId","id","map","assignment","find","s","sensorId","role","Boolean","getAvailableSensors","assignedSensorIds","Set","sensor","status","has","shared","handleAssignSensor","parseInt","getRoleDisplayName","roleNames","getRoleColor","roleColors","assignedSensors","availableSensors","children","name","onClick","length","_sensorTypes$sensor$t","location","title","value","onChange","e","target","_sensorTypes$sensor$t2","sensorType","capabilities","join","mqttTopic","disabled","_c","$RefreshReg$"],"sources":["/home/natalie/Dokumente/Projects/eco-garden/src/components/PlantSensorAssignment.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Plus, X, Droplets, Thermometer, Sun, Activity, AlertCircle } from 'lucide-react';\nimport { sensorTypes } from '../data/deviceData';\n\nconst PlantSensorAssignment = ({ \n  plant, \n  sensors, \n  currentAssignments, \n  onAssignSensor, \n  onUnassignSensor, \n  isOpen,\n  onClose \n}) => {\n  const [selectedSensorId, setSelectedSensorId] = useState('');\n  const [selectedRole, setSelectedRole] = useState('primary_moisture');\n\n  const getSensorIcon = (type) => {\n    switch (type) {\n      case 'WATERING_UNIT':\n        return <Droplets className=\"text-blue-500\" size={16} />;\n      case 'ENV_II':\n        return <Thermometer className=\"text-orange-500\" size={16} />;\n      case 'LIGHT_SENSOR':\n        return <Sun className=\"text-yellow-500\" size={16} />;\n      default:\n        return <Activity className=\"text-gray-500\" size={16} />;\n    }\n  };\n\n  const getAssignedSensors = () => {\n    return currentAssignments\n      .filter(a => a.plantId === plant.id)\n      .map(assignment => ({\n        ...sensors.find(s => s.id === assignment.sensorId),\n        role: assignment.role\n      }))\n      .filter(Boolean);\n  };\n\n  const getAvailableSensors = () => {\n    const assignedSensorIds = new Set(currentAssignments\n      .filter(a => a.plantId === plant.id)\n      .map(a => a.sensorId)\n    );\n    \n    return sensors.filter(sensor => \n      sensor.status === 'active' && \n      (!assignedSensorIds.has(sensor.id) || sensor.shared)\n    );\n  };\n\n  const handleAssignSensor = () => {\n    if (selectedSensorId && selectedRole) {\n      onAssignSensor(plant.id, parseInt(selectedSensorId), selectedRole);\n      setSelectedSensorId('');\n      setSelectedRole('primary_moisture');\n    }\n  };\n\n  const getRoleDisplayName = (role) => {\n    const roleNames = {\n      'primary_moisture': 'Primary Moisture',\n      'environmental': 'Environmental',\n      'backup_moisture': 'Backup Moisture',\n      'light_monitoring': 'Light Monitoring'\n    };\n    return roleNames[role] || role;\n  };\n\n  const getRoleColor = (role) => {\n    const roleColors = {\n      'primary_moisture': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',\n      'environmental': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',\n      'backup_moisture': 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200',\n      'light_monitoring': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\n    };\n    return roleColors[role] || 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n  };\n\n  const assignedSensors = getAssignedSensors();\n  const availableSensors = getAvailableSensors();\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            Manage Sensors for {plant.name}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n\n        {/* Currently Assigned Sensors */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n            Assigned Sensors ({assignedSensors.length})\n          </h3>\n          \n          {assignedSensors.length > 0 ? (\n            <div className=\"space-y-3\">\n              {assignedSensors.map(sensor => (\n                <div\n                  key={`${sensor.id}-${sensor.role}`}\n                  className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\"\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    {getSensorIcon(sensor.type)}\n                    <div>\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"font-medium text-gray-900 dark:text-white\">\n                          {sensor.name}\n                        </span>\n                        <span className={`text-xs px-2 py-1 rounded ${getRoleColor(sensor.role)}`}>\n                          {getRoleDisplayName(sensor.role)}\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {sensorTypes[sensor.type]?.name} • {sensor.location || 'No location'}\n                        {sensor.shared && (\n                          <span className=\"ml-2 text-xs bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 px-1 py-0.5 rounded\">\n                            Shared\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <button\n                    onClick={() => onUnassignSensor(plant.id, sensor.id, sensor.role)}\n                    className=\"p-2 text-gray-400 hover:text-red-600 dark:hover:text-red-400\"\n                    title=\"Remove sensor\"\n                  >\n                    <X size={16} />\n                  </button>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-4 text-gray-500 dark:text-gray-400\">\n              <AlertCircle size={24} className=\"mx-auto mb-2\" />\n              <p>No sensors assigned to this plant yet.</p>\n            </div>\n          )}\n        </div>\n\n        {/* Add New Sensor Assignment */}\n        <div className=\"border-t border-gray-200 dark:border-gray-600 pt-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">\n            Assign New Sensor\n          </h3>\n          \n          {availableSensors.length > 0 ? (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {/* Sensor Selection */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Select Sensor\n                  </label>\n                  <select\n                    value={selectedSensorId}\n                    onChange={(e) => setSelectedSensorId(e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-md dark:bg-gray-700 dark:text-white\"\n                  >\n                    <option value=\"\">Choose a sensor...</option>\n                    {availableSensors.map(sensor => (\n                      <option key={sensor.id} value={sensor.id}>\n                        {sensor.name} ({sensorTypes[sensor.type]?.name})\n                        {sensor.shared ? ' - Shared' : ''}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Role Selection */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Sensor Role\n                  </label>\n                  <select\n                    value={selectedRole}\n                    onChange={(e) => setSelectedRole(e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 dark:border-gray-600 rounded-md dark:bg-gray-700 dark:text-white\"\n                  >\n                    <option value=\"primary_moisture\">Primary Moisture</option>\n                    <option value=\"environmental\">Environmental</option>\n                    <option value=\"backup_moisture\">Backup Moisture</option>\n                    <option value=\"light_monitoring\">Light Monitoring</option>\n                  </select>\n                </div>\n              </div>\n\n              {/* Selected Sensor Info */}\n              {selectedSensorId && (\n                <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                  {(() => {\n                    const sensor = sensors.find(s => s.id === parseInt(selectedSensorId));\n                    const sensorType = sensorTypes[sensor?.type];\n                    return (\n                      <div className=\"flex items-center space-x-2\">\n                        {getSensorIcon(sensor?.type)}\n                        <div className=\"text-sm\">\n                          <div className=\"font-medium text-gray-900 dark:text-white\">\n                            {sensor?.name}\n                          </div>\n                          <div className=\"text-gray-600 dark:text-gray-400\">\n                            Capabilities: {sensorType?.capabilities.join(', ')}\n                          </div>\n                          <div className=\"text-gray-600 dark:text-gray-400\">\n                            MQTT Topic: {sensor?.mqttTopic}\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })()}\n                </div>\n              )}\n\n              <button\n                onClick={handleAssignSensor}\n                disabled={!selectedSensorId || !selectedRole}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <Plus size={16} />\n                <span>Assign Sensor</span>\n              </button>\n            </div>\n          ) : (\n            <div className=\"text-center py-4 text-gray-500 dark:text-gray-400\">\n              <p>No available sensors to assign.</p>\n              <p className=\"text-sm mt-1\">\n                All active sensors are already assigned (unless they're shared sensors).\n              </p>\n            </div>\n          )}\n        </div>\n\n        {/* Role Descriptions */}\n        <div className=\"mt-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n          <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n            Sensor Role Descriptions:\n          </h4>\n          <div className=\"text-xs text-gray-600 dark:text-gray-400 space-y-1\">\n            <div><strong>Primary Moisture:</strong> Main sensor for monitoring soil moisture and triggering watering.</div>\n            <div><strong>Environmental:</strong> Monitors ambient conditions (temperature, humidity).</div>\n            <div><strong>Backup Moisture:</strong> Secondary moisture sensor for redundancy.</div>\n            <div><strong>Light Monitoring:</strong> Tracks light levels and UV exposure.</div>\n          </div>\n        </div>\n\n        {/* Close Button */}\n        <div className=\"flex justify-end mt-6\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n          >\n            Done\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlantSensorAssignment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}